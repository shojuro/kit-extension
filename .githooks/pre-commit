#!/bin/bash

# Pre-commit hook for Kit Memory Extension
# Phase 1: Essential Security (Fast & Focused)

echo "üîç Running security checks..."

# Color codes for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# 1. Check if .env is being committed (CRITICAL)
if git diff --cached --name-only | grep -q "^\.env$"; then
  echo -e "${RED}‚ùå ERROR: Attempting to commit .env file!${NC}"
  echo "The .env file contains sensitive credentials and must NEVER be committed."
  echo "To fix: git reset HEAD .env"
  exit 1
fi

# 2. Check for real secrets in staged files only (not entire repo)
echo "Scanning for secrets in staged files..."

# Get list of staged files (excluding deleted files)
STAGED_FILES=$(git diff --cached --name-only --diff-filter=d)

if [ ! -z "$STAGED_FILES" ]; then
  # Check for Supabase keys (JWT format)
  if echo "$STAGED_FILES" | xargs grep -l "eyJ[a-zA-Z0-9_-]\{20,\}\.[a-zA-Z0-9_-]\{20,\}\.[a-zA-Z0-9_-]\{20,\}" 2>/dev/null; then
    echo -e "${RED}‚ùå SECURITY WARNING: Supabase key detected in staged files!${NC}"
    echo "Remove the key and use environment variables instead."
    exit 1
  fi
  
  # Check for OpenAI API keys
  if echo "$STAGED_FILES" | xargs grep -l "sk-[a-zA-Z0-9]\{48\}" 2>/dev/null; then
    echo -e "${RED}‚ùå SECURITY WARNING: OpenAI API key detected in staged files!${NC}"
    echo "Remove the key and use environment variables instead."
    exit 1
  fi
  
  # Check for AWS keys
  if echo "$STAGED_FILES" | xargs grep -l "AKIA[0-9A-Z]\{16\}" 2>/dev/null; then
    echo -e "${RED}‚ùå SECURITY WARNING: AWS key detected in staged files!${NC}"
    echo "Remove the key and use environment variables instead."
    exit 1
  fi
  
  # Check for private keys
  if echo "$STAGED_FILES" | xargs grep -l "-----BEGIN.*PRIVATE KEY-----" 2>/dev/null; then
    echo -e "${RED}‚ùå SECURITY WARNING: Private key detected in staged files!${NC}"
    echo "Private keys should never be committed to the repository."
    exit 1
  fi
  
  # Check for hardcoded passwords (but exclude common false positives)
  PASSWORDS=$(echo "$STAGED_FILES" | xargs grep -n "password\s*[:=]\s*['\"][^'\"]\{8,\}['\"]" 2>/dev/null | \
               grep -v "your_password_here\|placeholder\|example\|dummy\|test\|fake")
  
  if [ ! -z "$PASSWORDS" ]; then
    echo -e "${RED}‚ùå SECURITY WARNING: Hardcoded password detected!${NC}"
    echo "$PASSWORDS"
    exit 1
  fi
fi

# 3. Check for console.log statements (warning only)
CONSOLE_LOGS=$(git diff --cached | grep "^+" | grep "console\.log" | head -5)
if [ ! -z "$CONSOLE_LOGS" ]; then
  echo -e "${YELLOW}‚ö†Ô∏è  Warning: console.log statements found${NC}"
  echo "Consider using conditional logging or removing before production."
  # Don't block commit for this
fi

# 4. Quick manifest.json validation (if changed)
if echo "$STAGED_FILES" | grep -q "manifest.json"; then
  if [ -f "manifest.json" ]; then
    python3 -m json.tool manifest.json > /dev/null 2>&1
    if [ $? -ne 0 ]; then
      echo -e "${RED}‚ùå ERROR: manifest.json is not valid JSON${NC}"
      exit 1
    fi
  fi
fi

echo -e "${GREEN}‚úÖ Security checks passed!${NC}"
exit 0